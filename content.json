{"meta":{"title":"CodeCoderCoding","subtitle":"CodeCoderCoding","description":"CodeCoderCoding","author":"CodeCoderCoding","url":"https://codecodercoding.github.io"},"pages":[{"title":"tags","date":"2018-11-26T14:42:18.000Z","updated":"2018-11-26T15:46:26.808Z","comments":true,"path":"tags/index.html","permalink":"https://codecodercoding.github.io/tags/index.html","excerpt":"","text":""},{"title":"categories","date":"2018-11-26T14:43:26.000Z","updated":"2018-11-26T15:46:38.584Z","comments":true,"path":"categories/index.html","permalink":"https://codecodercoding.github.io/categories/index.html","excerpt":"","text":""}],"posts":[{"title":"linux用户","slug":"linux-user","date":"2018-11-28T15:26:47.000Z","updated":"2018-11-28T16:08:43.589Z","comments":true,"path":"2018/11/28/linux-user/","link":"","permalink":"https://codecodercoding.github.io/2018/11/28/linux-user/","excerpt":"","text":"","categories":[],"tags":[{"name":"linux","slug":"linux","permalink":"https://codecodercoding.github.io/tags/linux/"},{"name":"用户","slug":"用户","permalink":"https://codecodercoding.github.io/tags/用户/"},{"name":"用户组","slug":"用户组","permalink":"https://codecodercoding.github.io/tags/用户组/"},{"name":"权限","slug":"权限","permalink":"https://codecodercoding.github.io/tags/权限/"}]},{"title":"linux命令","slug":"linux-command","date":"2018-11-28T15:20:13.000Z","updated":"2018-11-28T16:14:31.866Z","comments":true,"path":"2018/11/28/linux-command/","link":"","permalink":"https://codecodercoding.github.io/2018/11/28/linux-command/","excerpt":"","text":"系统显示系统信息arch 显示机器的处理器架构(1)uname -m 显示机器的处理器架构(2)uname -r 显示正在使用的内核版本dmidecode -q 显示硬件系统部件 - (SMBIOS / DMI)hdparm -i /dev/hda 罗列一个磁盘的架构特性hdparm -tT /dev/sda 在磁盘上执行测试性读取操作cat /proc/cpuinfo 显示CPU info的信息cat /proc/interrupts 显示中断cat /proc/meminfo 校验内存使用cat /proc/swaps 显示哪些swap被使用cat /proc/version 显示内核的版本cat /proc/net/dev 显示网络适配器及统计cat /proc/mounts 显示已加载的文件系统lspci -tv 罗列 PCI 设备lsusb -tv 显示 USB 设备date 显示系统日期cal 2007 显示2007年的日历表date 041217002007.00 设置日期和时间 - 月日时分年.秒clock -w 将时间修改保存到 BIOS 文件/目录文件和目录cd /home 进入 ‘/ home’ 目录’cd .. 返回上一级目录cd ../.. 返回上两级目录cd 进入个人的主目录cd ~user1 进入个人的主目录cd - 返回上次所在的目录pwd 显示工作路径ls 查看目录中的文件ls -F 查看目录中的文件ls -l 显示文件和目录的详细资料ls -a 显示隐藏文件ls [0-9] 显示包含数字的文件名和目录名tree 显示文件和目录由根目录开始的树形结构(1)lstree 显示文件和目录由根目录开始的树形结构(2)mkdir dir1 创建一个叫做 ‘dir1’ 的目录’mkdir dir1 dir2 同时创建两个目录mkdir -p /tmp/dir1/dir2 创建一个目录树rm -f file1 删除一个叫做 ‘file1’ 的文件’rmdir dir1 删除一个叫做 ‘dir1’ 的目录’rm -rf dir1 删除一个叫做 ‘dir1’ 的目录并同时删除其内容rm -rf dir1 dir2 同时删除两个目录及它们的内容mv dir1 new_dir 重命名/移动 一个目录cp file1 file2 复制一个文件cp dir/* . 复制一个目录下的所有文件到当前工作目录cp -a /tmp/dir1 . 复制一个目录到当前工作目录cp -a dir1 dir2 复制一个目录ln -s file1 lnk1 创建一个指向文件或目录的软链接ln file1 lnk1 创建一个指向文件或目录的物理链接touch -t 0712250000 file1 修改一个文件或目录的时间戳 - (YYMMDDhhmm)file file1 outputs the mime type of the file as texticonv -l 列出已知的编码 文件权限ls -lh 显示权限ls /tmp | pr -T5 -W$COLUMNS 将终端划分成5栏显示chmod ugo+rwx directory1 设置目录的所有人(u)、群组(g)以及其他人(o)以读（r ）、写(w)和执行(x)的权限chmod go-rwx directory1 删除群组(g)与其他人(o)对目录的读写执行权限chown user1 file1 改变一个文件的所有人属性chown -R user1 directory1 改变一个目录的所有人属性并同时改变改目录下所有文件的属性chgrp group1 file1 改变文件的群组chown user1:group1 file1 改变一个文件的所有人和群组属性find / -perm -u+s 罗列一个系统中所有使用了SUID控制的文件chmod u+s /bin/file1 设置一个二进制文件的 SUID 位 - 运行该文件的用户也被赋予和所有者同样的权限chmod u-s /bin/file1 禁用一个二进制文件的 SUID位chmod g+s /home/public 设置一个目录的SGID 位 - 类似SUID ，不过这是针对目录的chmod g-s /home/public 禁用一个目录的 SGID 位chmod o+t /home/public 设置一个文件的 STIKY 位 - 只允许合法所有人删除文件chmod o-t /home/public 禁用一个目录的 STIKY 位 文件搜索find / -name file1 从 ‘/‘ 开始进入根文件系统搜索文件和目录find / -user user1 搜索属于用户 ‘user1’ 的文件和目录find /home/user1 -name *.bin 在目录 ‘/ home/user1’ 中搜索带有’.bin’ 结尾的文件find /usr/bin -type f -atime +100 搜索在过去100天内未被使用过的执行文件find /usr/bin -type f -mtime -10 搜索在10天内被创建或者修改过的文件find / -name *.rpm -exec chmod 755 ‘{}’ \\; 搜索以 ‘.rpm’ 结尾的文件并定义其权限find / -xdev -name *.rpm 搜索以 ‘.rpm’ 结尾的文件，忽略光驱、捷盘等可移动设备locate *.ps 寻找以 ‘.ps’ 结尾的文件 - 先运行 ‘updatedb’ 命令whereis halt 显示一个二进制文件、源码或man的位置which halt 显示一个二进制文件或可执行文件的完整路径","categories":[],"tags":[{"name":"linux","slug":"linux","permalink":"https://codecodercoding.github.io/tags/linux/"},{"name":"命令","slug":"命令","permalink":"https://codecodercoding.github.io/tags/命令/"}]},{"title":"linux基础-文件与目录","slug":"linux-file-directory","date":"2018-11-28T15:15:51.000Z","updated":"2018-11-28T16:08:44.473Z","comments":true,"path":"2018/11/28/linux-file-directory/","link":"","permalink":"https://codecodercoding.github.io/2018/11/28/linux-file-directory/","excerpt":"","text":"linux基础-文件与目录","categories":[],"tags":[{"name":"linux","slug":"linux","permalink":"https://codecodercoding.github.io/tags/linux/"},{"name":"file","slug":"file","permalink":"https://codecodercoding.github.io/tags/file/"},{"name":"directory","slug":"directory","permalink":"https://codecodercoding.github.io/tags/directory/"}]},{"title":"problem_mysql","slug":"problem-mysql","date":"2018-11-28T13:42:07.000Z","updated":"2018-11-28T14:06:26.031Z","comments":true,"path":"2018/11/28/problem-mysql/","link":"","permalink":"https://codecodercoding.github.io/2018/11/28/problem-mysql/","excerpt":"","text":"mysql相关问题及其解决方法1. 数据库中存在已经连接成功的“连接”，但忘记了密码，导致无法创建新的“连接” 打开已成功连接数据库系统的“连接“ 找到mysql数据库，并进入 找到user表 找到user表中，root实例对应的authentication_string值（即为root用户的经过MD5加密的密码） 使用MD5解密工具进行解密，获取明文密码（用google/百度搜索”MD5”关键字便可找到相应的”MD5”加解密工具","categories":[],"tags":[{"name":"problem","slug":"problem","permalink":"https://codecodercoding.github.io/tags/problem/"},{"name":"mysql","slug":"mysql","permalink":"https://codecodercoding.github.io/tags/mysql/"}]},{"title":"test4","slug":"test4","date":"2018-11-26T15:01:00.000Z","updated":"2018-11-28T14:13:18.047Z","comments":true,"path":"2018/11/26/test4/","link":"","permalink":"https://codecodercoding.github.io/2018/11/26/test4/","excerpt":"","text":"ceshitest测试","categories":[{"name":"Hexo2测试","slug":"Hexo2测试","permalink":"https://codecodercoding.github.io/categories/Hexo2测试/"}],"tags":[{"name":"标签一","slug":"标签一","permalink":"https://codecodercoding.github.io/tags/标签一/"},{"name":"标签二","slug":"标签二","permalink":"https://codecodercoding.github.io/tags/标签二/"}]},{"title":"test3","slug":"test3","date":"2018-11-26T14:45:03.000Z","updated":"2018-11-26T14:46:02.775Z","comments":true,"path":"2018/11/26/test3/","link":"","permalink":"https://codecodercoding.github.io/2018/11/26/test3/","excerpt":"","text":"test3test3","categories":[{"name":"test3","slug":"test3","permalink":"https://codecodercoding.github.io/categories/test3/"}],"tags":[{"name":"test3","slug":"test3","permalink":"https://codecodercoding.github.io/tags/test3/"}]},{"title":"test2","slug":"test2","date":"2018-11-26T14:19:13.000Z","updated":"2018-11-26T14:19:13.957Z","comments":true,"path":"2018/11/26/test2/","link":"","permalink":"https://codecodercoding.github.io/2018/11/26/test2/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"test1","slug":"test1","date":"2018-11-26T13:57:12.000Z","updated":"2018-11-28T16:08:37.531Z","comments":true,"path":"2018/11/26/test1/","link":"","permalink":"https://codecodercoding.github.io/2018/11/26/test1/","excerpt":"","text":"test1 test1 test1","categories":[],"tags":[]},{"title":"test","slug":"test","date":"2018-11-26T12:45:19.000Z","updated":"2018-11-26T14:55:12.535Z","comments":true,"path":"2018/11/26/test/","link":"","permalink":"https://codecodercoding.github.io/2018/11/26/test/","excerpt":"","text":"test test1 test2 test3 test4","categories":[{"name":"Hexo测试","slug":"Hexo测试","permalink":"https://codecodercoding.github.io/categories/Hexo测试/"}],"tags":[{"name":"标签一","slug":"标签一","permalink":"https://codecodercoding.github.io/tags/标签一/"},{"name":"标签二","slug":"标签二","permalink":"https://codecodercoding.github.io/tags/标签二/"}]},{"title":"postname","slug":"postname","date":"2018-11-16T13:58:42.000Z","updated":"2018-11-16T14:00:59.278Z","comments":true,"path":"2018/11/16/postname/","link":"","permalink":"https://codecodercoding.github.io/2018/11/16/postname/","excerpt":"","text":"Hello World","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2018-10-31T03:31:31.497Z","updated":"2018-11-26T12:38:16.082Z","comments":true,"path":"2018/10/31/hello-world/","link":"","permalink":"https://codecodercoding.github.io/2018/10/31/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[{"name":"hello world","slug":"hello-world","permalink":"https://codecodercoding.github.io/tags/hello-world/"}]}]}